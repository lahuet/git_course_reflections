When would you want to use a remote repository rather than keeping all your work local?

I'd want to use a remote repository when I want to share and collaborate on code with others.  (Or as backup?)

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

Because I might have changes on the local I don't want the remote to interfere with.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Clone copies a repository (from GitHub or from a local) to your local.  This could be used to copy a project.  Fork is a clone but done entirely on GitHub.  This would be if you want to build on someone's existing repository but don't have permission to update their repository.  Branch is part of the editing process whereby you make sideways changes to your project.

What is the benefit of having a copy of the last known state of the remote stored locally?

So you can compare your branch with the remote even when you're offline.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

Without Git, we'd be emailing a lot of files back and forth and manually checking differences.  It's more time-consuming but easier to get a hold of.  Git has a steep learning curve but could be easier to use once past that hump.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

Make changes to a separate branch if merge is collaborative and must always be working.
However, making changes directly to the master is simpler because you don't have to do merges.